/**
 * @license Autofields v2.0.0
 * (c) 2014 Justin Maier http://justmaier.github.io/angular-autoFields-bootstrap
 * License: MIT
 */
"use strict";
angular.module("autofields.core",[]).provider("$autofields",function(){var e={},t={CamelToTitle:function(e){return e.replace(/([A-Z])/g," $1").replace(/^./,function(e){return e.toUpperCase()})},CamelToDash:function(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()},LabelText:function(e){return e.label||t.CamelToTitle(e.property)}};e.settings={classes:{container:[],input:[],label:[]},attributes:{container:{"class":"$type"},input:{id:"$property",name:"$property",type:"$type",ngModel:"$data['$property']",placeholder:"$placeholder"},label:{}},container:'<div class="autofields" ng-form name="$form"></div>'};var n=function(e,n,r,a){angular.forEach(a,function(a,i){a&&"string"==typeof a&&(a=a.replace(/\$form/g,e.formStr).replace(/\$schema/g,e.schemaStr).replace(/\$type/g,n.type||"text").replace(/\$property/g,n.property).replace(/\$data/g,e.dataStr).replace(/\$placeholder/g,null!=n.placeholder?n.placeholder:t.LabelText(n))),r.attr(t.CamelToDash(i),a)})},r=function(t,r,a){var i=angular.element("<div/>");return a=angular.extend({},e.settings.attributes.container,a),n(t,r,i,a),i.addClass(e.settings.classes.container.join(" ")),i},a=function(r,a,i){var o=angular.element("<label/>");return i=angular.extend({},e.settings.attributes.label,i),n(r,a,o,i),o.addClass(e.settings.classes.label.join(" ")),o.html(t.LabelText(a)),o},i=function(t,r,a,i){var o=angular.element(a);return i=angular.extend({},e.settings.attributes.input,i,r.attr),n(t,r,o,i),o.addClass(e.settings.classes.input.join(" ")),o};e.field=function(e,t,n,o){var s={fieldContainer:r(e,t),label:""!=t.label?a(e,t):null,input:i(e,t,n,o)};s.fieldContainer.append(s.label).append(s.input);var u=[];return angular.forEach(l,function(n,r){s=n(e,t,s,u),u.push(r)}),s};var o={};e.registerHandler=function(e,t){e=Array.isArray(e)?e:[e],angular.forEach(e,function(e){o[e]=t})};var l={};return e.registerMutator=function(e,t,n){(!l[e]||n.override)&&(l[e]=function(r,a,i,o){return n&&"string"==typeof n.require&&-1==o.indexOf(n.require)&&(i=l[n.require]),-1==o.indexOf(e)?t(r,a,i):void 0})},e.createField=function(e,t,n){var r=null==t.type?o.text:o[t.type];return null==r?void console.warn(t.type+" not supported - field ignored"):r(e,t,n)},e.$get=function(){return{settings:e.settings,createField:e.createField}},e}).directive("autoFields",["$autofields","$compile",function(e,t){return{restrict:"E",priority:1,replace:!0,compile:function(){return function(n,r,a){var i={schemaStr:a.fields||a.autoFields,optionsStr:a.options,dataStr:a.data,formStr:a.form||"autofields",classes:a.class,container:null,formScope:null},o={extendDeep:function(e){return angular.forEach(arguments,function(t){t!==e&&angular.forEach(t,function(t,n){e[n]&&e[n].constructor&&e[n].constructor===Object?o.extendDeep(e[n],t):e[n]=t})}),e}};i.options=angular.copy(e.settings);var l=function(r){r=r||n[i.schemaStr],i.container.html(""),angular.forEach(r,function(t,n){var r=e.createField(i,t,n);i.container.append(r)}),null!=i.formScope&&i.formScope.$destroy(),i.formScope=n.$new(),i.formScope.data=n[i.dataStr],i.formScope.fields=r,t(i.container)(i.formScope)};n.$watch(i.optionsStr,function(e,t){o.extendDeep(i.options,e),e!==t&&l()},!0),n.$watch(i.schemaStr,function(e){l(e)},!0),n.$watch(i.formStr,function(){i.container.attr("name",i.formStr)}),n.$watch(function(){return a.class},function(){i.classes=a.class,i.container.attr("class",i.classes)}),i.container=angular.element(i.options.container),i.container.attr("name",i.formStr),i.container.attr("class",i.classes),r.replaceWith(i.container)}}}}]),angular.module("autofields.standard",["autofields.core"]).config(["$autofieldsProvider",function(e){e.settings.fixUrl=!0,e.registerHandler(["text","email","url","date","number","password"],function(t,n){var r=e.field(t,n,"<input/>"),a=n.fixUrl?n.fixUrl:t.options.fixUrl;return"url"==n.type&&a&&r.input.attr("fix-url",""),r.fieldContainer}),e.settings.defaultOption="Select One",e.registerHandler("select",function(t,n){var r=n.defaultOption?n.defaultOption:t.options.defaultOption,a='<select><option value="">'+r+"</option></select>",i={ngOptions:n.list},o=e.field(t,n,a,i);return o.fieldContainer}),e.settings.textareaRows=3,e.registerHandler("textarea",function(t,n){var r=n.rows?n.rows:t.options.textareaRows,a=e.field(t,n,"<textarea/>",{rows:r});return a.fieldContainer}),e.registerHandler("checkbox",function(t,n){var r=e.field(t,n,"<input/>");return r.label&&r.label.prepend(r.input),r.fieldContainer}),e.settings.displayAttributes=(e.settings.displayAttributes||[]).concat(["ng-if","ng-show","ng-hide"]),e.registerMutator("displayAttributes",function(t,n,r){return n.attr?(angular.forEach(e.settings.displayAttributes,function(e){var t=r.input.attr(e);t&&(r.fieldContainer.attr(e,t),r.input.removeAttr(e))}),r):r})}]).directive("fixUrl",[function(){return{restrict:"A",require:"ngModel",link:function(e,t,n,r){var a=/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w\.\-\?\=\&]*)$/i,i=function(){var e=r.$modelValue;if(null!=e){for(var t in r.$formatters)e=r.$formatters[t](e);r.$viewValue=e,r.$render()}};t.bind("blur",i);var o=function(e){var t=a.test(e);if(t){var n=e.match(a),r=null!=n[1]&&""!=n[1]?n[1]:"http://";r+=n[2]+"."+n[3],"undefined"!=typeof n[4]&&(r+=n[4]),e=r}return e};r.$formatters.push(o),r.$parsers.unshift(o)}}}]),angular.module("autofields.validation",["autofields.core"]).config(["$autofieldsProvider",function(e){var t={CamelToTitle:function(e){return e.replace(/([A-Z])/g," $1").replace(/^./,function(e){return e.toUpperCase()})}};e.settings.validation={enabled:!0,showMessages:!0,defaultMsgs:{required:"This field is required",minlength:"This is under minimum length",maxlength:"This exceeds maximum length",min:"This is under the minumum value",max:"This exceeds the maximum value",email:"This is not a valid email address",valid:"This field is valid"},invalid:"$form.$property.$invalid && $form.$property.$dirty",valid:"$form.$property.$valid"},e.settings.attributes.container.ngClass="{'invalid':"+e.settings.validation.invalid+", 'valid':"+e.settings.validation.valid+"}",e.registerMutator("validation",function(e,n,r){return r.validation=e.options.validation.enabled&&e.options.validation.showMessages,r.validation?(r.msgs=[],angular.forEach(angular.extend({},e.options.validation.defaultMsgs,n.msgs),function(a,i){(n.msgs&&null!=n.msgs[i]||n.type==i||n.attr&&(null!=n.attr[i]||null!=n.attr["ng"+t.CamelToTitle(i)]))&&r.msgs.push("("+e.formStr+"."+n.property+".$error."+i+"? '"+a+"' : '')")}),r.validMsg=n.msgs&&n.msgs.valid?n.msgs.valid:e.options.validation.defaultMsgs.valid,r.msgs.length,r):(r.fieldContainer.removeAttr("ng-class"),r)})}]),angular.module("autofields",["autofields.standard","autofields.validation"]),angular.module("autoFields",["autofields"]);